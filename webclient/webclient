import bottle
import dbinterface
import Secure
import time

db = dbinterface.DB()
bottle.debug(True)




@bottle.route('/hello')
def hello():
    return "Hello World!"

@bottle.route('/')
def loginForm():
    return bottle.template('Index')


@bottle.route('/menu')
def main_menu():
    return bottle.template('MainMenu')




@bottle.route('/Analytics')
def analytics_page():
    allUsers = db.grabUserList()
    return bottle.template('AnalyticsRoute', userList=allUsers)

@bottle.post('/Analytics')
def analyze():
    allUsers = db.grabUserList()
    userID = bottle.request.forms.get('selecteduser')
    startDate = bottle.request.forms.get('from')
    endDate = bottle.request.forms.get('to')
    print(startDate)
    print(endDate)
    if startDate != None and endDate != None:
        print("GRABBED BOTH DATES FROM FORMS")
    workedShifts = db.grabShiftCountByUserID(userID)
    allShifts = db.grabAllShiftsByUserID(userID)
    allShiftsWithinDates = db.grabAllShiftsForUserWithinDates('2012-01-01','2013-03-01', userID)
    monthlyShiftCount = db.grabAllShiftsByMonthByUserID(userID)





    return bottle.template('Analytics', shiftCount= workedShifts, dict = monthlyShiftCount, userList = allUsers)


@bottle.route('/static/:path#.+#', name='static')
def static(path):
    return bottle.static_file(path, root='./static/')

@bottle.route('/overview')
def overview_page():
    pass




@bottle.post('/Registering')
def registering():
    userFN = bottle.request.forms.get('First Name')
    userLN = bottle.request.forms.get('Last Name')
    userWG = bottle.request.forms.get('Wage')
    userAD = bottle.request.forms.get('Address')
    userSN = bottle.request.forms.get('SIN')
    userPW = bottle.request.forms.get('Password')
    userPC = bottle.request.forms.get('Confirm Password')
    if (userPW != userPC):
        return "Passwords do not match! Go back and correct the issue."
    else:
        securePW = Secure.SecureIt(userPW)
        try:
            db.createUser(userFN,userLN, userAD, userSN, userWG)
        except ValueError:
            return '''<p>Invalid information. Please Retry. Every field must be populated, wage must be a number, and sin must be exactly nine numbers.  </p>'''







@bottle.route('/Register')
def register_employee():
    return bottle.template('Register')





@bottle.post('/login')
def login_submit():
    name     = bottle.request.forms.get('name')
    password = bottle.request.forms.get('password')
    databasePassword = db.grabPW(name)
    if databasePassword == None:
        return "Couldnt find user in DB Named: %s" %name
    else:
        print("Success!!")
        print(databasePassword)
        if check_login(password, databasePassword):
            return '''<p>Your login was correct</p>
            <a href="/menu">Main Menu</a>
            '''
        else:
            return "<p>Login failed</p>"



def check_login(givenPassword, hashedPassword):
    return Secure.Compare(Secure.SecureIt(givenPassword), hashedPassword)




bottle.run(host='localhost', port=8082, debug=True)

