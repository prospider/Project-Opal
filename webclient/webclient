import bottle
import dbinterface
import Secure
import time

db = dbinterface.DB()
bottle.debug(True)




@bottle.route('/hello')
def hello():
    return "Hello World!"

@bottle.route('/')
def loginForm():
    db.grabStartTimesByUserID(1)
    return '''<form method="POST" action="/login">
                <input name="name"     type="text" />
                <input name="password" type="password" />
                <input type="submit" />
              </form>'''


@bottle.route('/menu')
def main_menu():
    return '''<p><a href='/Analytics'>Analytics</a></p>
    <p><a href="/Register">Register New Employee</a>
    '''




@bottle.route('/Analytics')
def analytics_page():
    userList = db.grabUserList()

    print(userList)
    returnHtml = '''<p>Please select a user.</p>
    <form action='/Analytics' method='POST'>
    <select name='selecteduser'>'''
    for tuple in userList:
        returnHtml += '<option value="%s">%s</option>' %(tuple[1],tuple[0])
    returnHtml += '''</select>
    <input type='submit' value='Analyze' />
    '''
    return returnHtml

@bottle.post('/Analytics')
def analyze():
    userID = bottle.request.forms.get('selecteduser')
    workedShifts = db.grabShiftCountByUserID(userID)
    return '''
    <p>Shifts worked: %s</p>
    <p>Most common start time: </p>
    ''' %workedShifts


@bottle.route('/overview')
def overview_page():
    pass

@bottle.post('/Registering')
def registering():
    userFN = bottle.request.forms.get('First Name')
    userLN = bottle.request.forms.get('Last Name')
    userWG = bottle.request.forms.get('Wage')
    userAD = bottle.request.forms.get('Address')
    userSN = bottle.request.forms.get('SIN')
    userPW = bottle.request.forms.get('Password')
    userPC = bottle.request.forms.get('Confirm Password')
    if (userPW != userPC):
        return "Passwords do not match! Go back and correct the issue."
    else:
        securePW = Secure.SecureIt(userPW)
        try:
            db.createUser(userFN,userLN, userAD, userSN, userWG)
        except ValueError:
            return '''<p>Invalid information. Please Retry. Every field must be populated, wage must be a number, and sin must be exactly nine numbers.  </p>'''







@bottle.route('/Register')
def register_employee():
    return '''<form method="POST" action="/Registering">
                First Name: <input name="First Name"     type="text" />
                </br>
                Last Name: <input name="Last Name"    type="text" />
                </br>
                Address: <input name="Address"    type="text" />
                </br>
                Wage: <input name="Wage"    type="number" step="any" min="10.25"/>
                </br>
                SIN: <input name="SIN"    type="text" />
                </br>
                Password: <input name="Password"  type="password" />
                </br>
                Confirm Password:<input name="Confirm Password" type="password">
                </br>
                <input type="submit" />
              </form>'''





@bottle.post('/login')
def login_submit():
    name     = bottle.request.forms.get('name')
    password = bottle.request.forms.get('password')
    databasePassword = db.grabPW(name)
    if databasePassword == None:
        return "Couldnt find user in DB Named: %s" %name
    else:
        print("Success!!")
        print(databasePassword)
        if check_login(password, databasePassword):
            return '''<p>Your login was correct</p>
            <a href="/menu">Main Menu</a>
            '''
        else:
            return "<p>Login failed</p>"



def check_login(givenPassword, hashedPassword):
    return Secure.Compare(Secure.SecureIt(givenPassword), hashedPassword)




bottle.run(host='localhost', port=8082)

